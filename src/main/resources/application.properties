# ================================================
# Import environmental dependent properties
# ================================================
spring.config.import=optional:file:.env[.properties]

# ================================================
# Application Info
# ================================================
spring.application.name=tranqilo

# ================================================
# Database Configuration
# These values will be loaded from the .env file
# ================================================
# e.g., jdbc:postgresql://localhost:5432/tranqilo_db
spring.datasource.url=${SPRING_DATASOURCE_URL}
# e.g., tranqilo_admin
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
# e.g., secret_password
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# ================================================
# Hibernate / JPA Settings
# ================================================
#Can be: none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=update
# Set to false to disable SQL logging
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# This property ensures that CommandLineRunner beans (like your DataInitializer)
# run only AFTER the database schema has been created by Hibernate.
spring.jpa.defer-database-initialization=true

# ================================================
# Spring Security
# Leave blank or override in .env for dev purposes
# ================================================
spring.security.user.name=
spring.security.user.password=

# ================================================
# Disable Default Spring Security (Optional)
# Comment this line to enable default login screen
# ================================================
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration


# ================================================
# JWT Settings
# ================================================
jwt.secret=${JWT_SECRET}
# Default to 30 minutes (1800000 ms) if not set in .env
jwt.expiration=${JWT_EXPIRATION_MS:1800000} 